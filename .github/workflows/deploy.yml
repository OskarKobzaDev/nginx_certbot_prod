env:
  UID: 1000
  GID: 33

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: [self-hosted, nginx]

    steps:
    - name: Check user
      run: |
        whoami
        id
    
    - name: Reset ownership via Docker and remove old repository
      run: |
        docker run --rm \
          -v /home/oskar/var/www/nginx_certbot_prod:/data \
          alpine \
          chown -R "${UID}:${GID}" /data

        rm -rf /home/oskar/var/www/nginx_certbot_prod

    - name: Clone fresh repo with submodules
      run: |
        git clone git@github.com:OskarKobzaDev/nginx_certbot_prod.git /home/oskar/var/www/nginx_certbot_prod

    - name: Stop and clean containers
      run: |
        cd /home/oskar/var/www/nginx_certbot_prod
        docker-compose down --volumes

    - name: Prepare certbot and nginx directories via Docker
      run: |
        docker run --rm \
          -v /home/oskar/var/www/nginx_certbot_prod:/data \
          alpine \
          sh -c "mkdir -p /data/nginx/logs && \
                 chmod -R 755 /data/nginx && \
                 chown -R ${UID}:${GID} /data/nginx"

        docker run --rm \
          -v /home/oskar/var/www/certbot:/data \
          alpine \
          sh -c "mkdir -p /data/conf /data/www /data/logs /data/work && \
                 chmod -R 755 /data && \
                 chown -R ${UID}:${GID} /data"

    - name: Download options-ssl-nginx.conf
      run: |
        curl -sSL https://raw.githubusercontent.com/certbot/certbot/main/certbot-nginx/src/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf \
          -o /home/oskar/var/www/certbot/conf/options-ssl-nginx.conf

    - name: Start fresh clean containers
      run: |
        cd /home/oskar/var/www/nginx_certbot_prod
        docker-compose up -d --build

    - name: Generate openSSL file
      run: |
        openssl dhparam -out /home/oskar/var/www/certbot/conf/ssl-dhparams.pem 2048


    #RUN next step when there was wipe on certbot dir and there is no ssl_certificates on VPS

    # - name: Run certbot for oskarkobza.pl i storytimedemo
    #   run: |
    #     cd /home/oskar/var/www/deploy-repo
    #     docker-compose run --rm certbot_init certonly \
    #       --webroot \
    #       -w /var/www/certbot \                                             #
    #       --email oskar@oskarkobza.pl \
    #       -d oskarkobza.pl -d www.oskarkobza.pl \
    #       -d storytimedemo.oskarkobza.pl -d www.storytimedemo.oskarkobza.pl \
    #       --agree-tos \
    #       --no-eff-email \
    #       --force-renewal

    #Run next two steps ONLY when certificates are in place and apps from deploy repo are up

    - name: Change nginx configuration to ssl
      run: |
        cp /home/oskar/var/www/nginx_certbot_prod/nginx/default-ssl.conf /home/oskar/var/www/nginx_certbot_prod/nginx/default.conf
    
    - name: Reload nginx
      run: |
        docker restart my-nginx